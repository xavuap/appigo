// Generated by CoffeeScript 1.12.0
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  tela.igo = {
    tablero: function(turnado) {
      var c, i, j;
      c = {
        turno: turnado.turno,
        tablero: turnado.tablero,
        gross: turnado["_id"],
        td: function(ancho) {
          return {
            "width": tela.igo.luce.pip(c.gross)(ancho),
            "height": tela.igo.luce.pip(c.gross)(ancho),
            "padding": "0",
            "margin": "0",
            "cellpadding": "0",
            "cellspacing": "0",
            "cursor": "pointer",
            "box-sizing": "border-box",
            transitionDuration: "500ms",
            transitionProperty: "background,opacity"
          };
        },
        hash: function(jeto) {
          return function(piedra) {
            return window.location.hash = ["igo", c.gross, jeto.attr("lon"), jeto.attr("lan"), "" + piedra].join("#");
          };
        },
        relleno: function(vert) {
          return function(horz) {
            var obj;
            return tela.tag("td").attr({
              lon: Math.floor(i / 2),
              lan: Math.floor(j / 2),
              piedra: c.tablero[Math.floor(j / 2)][Math.floor(i / 2)],
              x: i,
              y: j,
              hollow: false
            }, vert, horz).addClass(["igo", vert, horz].join(" ")).css(c.td(5)).css(tela.igo.luce.bordado({
              gross: c.gross,
              piedra: c.tablero[Math.floor(j / 2)][Math.floor(i / 2)],
              card: vert,
              k: i
            })).css(tela.igo.luce.bordado({
              gross: c.gross,
              piedra: c.tablero[Math.floor(j / 2)][Math.floor(i / 2)],
              card: horz,
              k: j
            })).css((
              obj = {},
              obj["border-" + ([vert, horz].join("-")) + "-radius"] = tela.igo.luce.pip(c.gross)(5),
              obj
            )).css(tela.igo.luce.jugadas(vert + " " + horz)(c.tablero[Math.floor(j / 2)][Math.floor(i / 2)])).on("click", function(e) {
              return c.hash($(this))(tela.igo[c.gross].turno);
            }).contextmenu(function(e) {
              e.preventDefault();
              return c.hash($(this))("nada");
            }).hover((function() {
              return tela.igo.juego.jugar({
                y: $(this).attr("lan"),
                x: $(this).attr("lon"),
                gross: c.gross,
                piedra: tela.igo[c.gross].turno
              });
            }), (function() {
              return tela.igo.juego.jugante({
                y: $(this).attr("lan"),
                x: $(this).attr("lon"),
                gross: c.gross,
                piedra: $(this).attr("piedra")
              });
            }));
          };
        }
      };
      if (tela.igo[c.gross] == null) {
        tela.igo[c.gross] = {};
      }
      tela.igo[c.gross].turno = c.turno;
      tela.igo.luce.marco("igo").append([
        tela.igo.luce.madera.create(c.gross).append([
          tela.tag("table").addClass("igo tablero").css({
            "border-collapse": "collapse",
            "cellpadding": "0",
            "cellspacing": "0"
          }).append((function() {
            var k, ref, results;
            results = [];
            for (j = k = 0, ref = tela.igo.luce.grosser(c.gross); 0 <= ref ? k <= ref : k >= ref; j = 0 <= ref ? ++k : --k) {
              results.push(tela.tag("tr").attr({
                "lon": Math.floor(j / 2)
              }).addClass("igo").append((function() {
                var l, ref1, results1;
                results1 = [];
                for (i = l = 0, ref1 = tela.igo.luce.grosser(c.gross); 0 <= ref1 ? l <= ref1 : l >= ref1; i = 0 <= ref1 ? ++l : --l) {
                  results1.push(c.relleno(["top", "bottom"][j % 2])(["left", "right"][i % 2]));
                }
                return results1;
              })()));
            }
            return results;
          })())
        ])
      ]);
      tela.igo.luce.tone.selected(c.gross);
      return tela.igo.storage.tones.mete(c.gross);
    },
    juego: {
      jugado: function(jugada) {
        if (tela.igo[jugada.gross] != null) {
          tela.igo[jugada.gross].turno = jugada.turno;
          return tela.igo.luce.empedrar(jugada)(function(esquina, empedrar) {
            return empedrar(esquina.off("transitionend").attr({
              piedra: jugada.piedra,
              hollow: false
            }).css({
              opacity: "1"
            }));
          });
        }
      },
      jugar: function(jugada) {
        return tela.igo.luce.empedrar(jugada)(function(esquina, empedrar) {
          return empedrar(esquina.css({
            opacity: "0.7"
          }).attr({
            hollow: true
          }));
        });
      },
      jugante: function(jugada) {
        return tela.igo.luce.empedrar(jugada)(function(esquina, empedrar) {
          return empedrar(esquina.css({
            opacity: "1"
          }).attr({
            hollow: false
          }));
        });
      },
      jugando: function(jugada) {
        var trocar;
        trocar = function(jeto) {
          var troca;
          troca = function(jeto) {
            return jeto.attr({
              hollow: function(i, v) {
                return {
                  "true": (function(_this) {
                    return function() {
                      console.log({
                        "true": v
                      });
                      console.log($(_this));
                      $(_this).css({
                        opacity: "1"
                      });
                      return false;
                    };
                  })(this),
                  "false": (function(_this) {
                    return function() {
                      console.log({
                        "false": v
                      });
                      $(_this).css({
                        opacity: "0.7"
                      });
                      return true;
                    };
                  })(this)
                }[v]();
              }
            });
          };
          return troca(jeto.on("transitionend", function() {
            return troca($(this));
          }));
        };
        return tela.igo.luce.empedrar(jugada)(function(esquina, empedrar) {
          var piedra;
          esquina.off("transitionend");
          piedra = {
            jugada: esquina.attr("piedra")
          };
          if (jugada.piedra === "nada") {
            if (piedra.jugada !== "nada") {
              return trocar(esquina);
            }
          } else {
            if (jugada.piedra === piedra.jugada) {
              return trocar(esquina);
            } else {
              empedrar(esquina.attr({
                piedra: jugada.piedra
              }));
              return trocar(esquina);
            }
          }
        });
      }
    },
    ws: {
      on: function() {
        tela.ws.on.igo = function(mj) {
          var ih, results;
          console.log(mj);
          results = [];
          for (ih in mj) {
            results.push(tela.igo.ws.si[ih](mj[ih]));
          }
          return results;
        };
        return tela.ws.rc.igo = function() {
          console.log("conectad()");
          return tela.igo.luce.madera.limpia();
        };
      },
      si: {
        jugar: function(jugada) {
          return tela.igo.juego.jugado(jugada);
        },
        tablero: function(turnado) {
          if (turnado["_id"] === sessionStorage.getItem("gross")) {
            return tela.igo.tablero(turnado);
          }
        }
      },
      waiter: function(pedido) {
        console.log("por favor: ");
        console.log({
          igo: pedido
        });
        return tela.ws.ask({
          igo: pedido
        });
      },
      please: function(gross) {
        return function(embutido) {
          var obj;
          return tela.igo.ws.waiter((
            obj = {},
            obj["" + gross] = embutido,
            obj
          ));
        };
      }
    },
    select: function(mano) {
      var gross, jugada, madeira, madera, please, results, type;
      results = [];
      for (gross in mano) {
        results.push((function() {
          var results1;
          results1 = [];
          for (type in mano[gross]) {
            please = tela.igo.ws.please(gross);
            if (type === "forget") {
              tela.igo.remove(gross);
              please({
                forget: mano[gross][type]
              });
              results1.push(window.location.hash = "igo");
            } else {
              madera = $(".marco.igo div.madera");
              madera.filter("[gross!=" + gross + "]").hide();
              if (type === "nuevo") {
                tela.igo.luce.tone.selecting(gross);
                please({
                  nuevo: mano[gross][type]
                });
              } else {
                madeira = madera.filter("[gross=" + gross + "]");
                if (madeira.length) {
                  madeira.show();
                  tela.igo.luce.tone.selected(gross);
                  if (mano[gross][type] != null) {
                    jugada = mano[gross][type];
                    jugada.gross = gross;
                    tela.igo.juego.jugando(jugada);
                    please({
                      jugar: mano[gross][type]
                    });
                  }
                } else {
                  tela.igo.luce.tone.selecting(gross);
                  please({
                    select: mano[gross][type]
                  });
                }
              }
              results1.push(sessionStorage.setItem("gross", "" + gross));
            }
          }
          return results1;
        })());
      }
      return results;
    },
    remove: function(gross) {
      return {
        "false": function(gross) {
          $(".igo.botone[gross=" + gross + "]").remove();
          $(".igo.madera[gross=" + gross + "]").remove();
          delete tela.igo[gross];
          return tela.igo.storage.tones.saca(gross);
        },
        "true": function() {
          return alert("no me olvido del presente");
        }
      }[$(".igo.botone[gross=" + gross + "]").hasClass("selected")](gross);
    },
    hash: {
      0: function(hash) {
        return window.location.hash = ["igo", sessionStorage.getItem("gross") != null ? sessionStorage.getItem("gross") : localStorage.getItem("gross") != null ? localStorage.getItem("gross") : "19"].join("#");
      },
      1: function(hash) {
        var obj;
        return tela.igo.select((
          obj = {},
          obj["" + hash[0]] = {
            select: null
          },
          obj
        ));
      },
      2: function(hash) {
        var obj, obj1;
        return tela.igo.select((
          obj = {},
          obj["" + hash[0]] = (
            obj1 = {},
            obj1["" + hash[1]] = null,
            obj1
          ),
          obj
        ));
      },
      4: function(hash) {
        var obj;
        return tela.igo.select((
          obj = {},
          obj["" + hash[0]] = {
            jugar: {
              x: hash[1],
              y: hash[2],
              piedra: hash[3]
            }
          },
          obj
        ));
      },
      5: function(hash) {
        var obj, obj1;
        return tela.igo.select((
          obj = {},
          obj["" + hash[0]] = (
            obj1 = {},
            obj1["" + hash[1]] = {
              x: hash[2],
              y: hash[3],
              piedra: hash[4]
            },
            obj1
          ),
          obj
        ));
      }
    },
    storage: {
      tones: {
        hay: function(gross) {
          return {
            "true": indexOf.call(sessionStorage.getItem("tones").split(" "), gross) >= 0,
            "false": false
          }[sessionStorage.getItem("tones") != null];
        },
        mete: function(gross) {
          var tones;
          tones = sessionStorage.getItem("tones");
          if (tones != null) {
            tones = tones.split(" ");
            if (indexOf.call(tones, gross) < 0) {
              tones.push(gross);
              return sessionStorage.setItem("tones", tones.join(" "));
            }
          } else {
            return sessionStorage.setItem("tones", gross);
          }
        },
        saca: function(gross) {
          var i;
          if (sessionStorage.getItem("tones") != null) {
            return sessionStorage.setItem("tones", ((function() {
              var k, len, ref, results;
              ref = sessionStorage.getItem("tones").split(" ");
              results = [];
              for (k = 0, len = ref.length; k < len; k++) {
                i = ref[k];
                if (i !== gross) {
                  results.push(i);
                }
              }
              return results;
            })()).join(" "));
          }
        }
      }
    },
    luce: {
      fondo: "#C88F36",
      color: function(v) {
        var i;
        if (tela.igo.luce.color[v] == null) {
          tela.igo.luce.color[v] = "#" + (((function() {
            var k, results;
            results = [];
            for (i = k = 1; k <= 6; i = ++k) {
              results.push(v);
            }
            return results;
          })()).join(""));
        }
        return tela.igo.luce.color[v];
      },
      grosser: function(gross) {
        if (tela.igo.luce.grosser[gross] == null) {
          tela.igo.luce.grosser[gross] = gross * 2 - 1;
        }
        return tela.igo.luce.grosser[gross];
      },
      pip: function(gross) {
        if (tela.igo.luce.pip[gross] == null) {
          tela.igo.luce.pip[gross] = function(ene) {
            if (tela.igo.luce.pip[gross]["" + ene] == null) {
              tela.igo.luce.pip[gross]["" + ene] = ene * 96 / (gross * 2 * 5) + "vmin";
            }
            return tela.igo.luce.pip[gross]["" + ene];
          };
        }
        return tela.igo.luce.pip[gross];
      },
      bordado: function(v) {
        var obj;
        return (
          obj = {},
          obj["border-" + v.card] = "none",
          obj["border-" + {
            "top": "bottom",
            "bottom": "top",
            "left": "right",
            "right": "left"
          }[v.card]] = {
            blanca: "none",
            negra: "none",
            nada: function() {
              if (v.k == null) {
                v.k = $(this).attr({
                  top: "x",
                  bottom: "x",
                  left: "y",
                  right: "y"
                }[v.card]);
              }
              if (("" + v.k) === "0" || ("" + v.k) === ("" + (tela.igo.luce.grosser(v.gross)))) {
                return "none";
              } else {
                return (tela.igo.luce.pip(v.gross)(1)) + " solid black";
              }
            }
          }[v.piedra],
          obj
        );
      },
      empedrar: function(jugada) {
        return function(juego) {
          return $("div.madera[gross=" + jugada.gross + "] .igo.tablero tr[lon=" + jugada.y + "] td[lon=" + jugada.x + "]").each(function() {
            return juego($(this), function(jeto) {
              var horz, vert;
              horz = jeto.attr("horz");
              vert = jeto.attr("vert");
              return jeto.css(tela.igo.luce.jugadas([vert, horz].join(" "))(jugada.piedra)).css(tela.igo.luce.bordado({
                gross: jugada.gross,
                piedra: jugada.piedra,
                card: vert
              })).css(tela.igo.luce.bordado({
                gross: jugada.gross,
                piedra: jugada.piedra,
                card: horz
              }));
            });
          });
        };
      },
      jugadas: function(esquina) {
        return function(color) {
          return {
            background: "linear-gradient(to " + esquina + ", " + {
              nada: tela.igo.luce.fondo,
              negra: "black",
              blanca: "gray"
            }[color] + ", " + {
              nada: tela.igo.luce.fondo,
              negra: "gray",
              blanca: "white"
            }[color] + ")"
          };
        };
      },
      madera: {
        create: function(gross) {
          $(".igo.madera[gross=" + gross + "]").remove();
          return tela.tag("div").attr({
            gross: gross
          }).addClass("madera igo").css({
            "display": "table",
            "box-sizing": "border-box",
            "float": "left",
            "background-color": tela.igo.luce.fondo,
            "padding": "0",
            "border": "none",
            "margin": "0"
          });
        },
        limpia: function(gross) {
          return $(".igo.madera").remove();
        }
      },
      tone: {
        mute: {
          create: function(cor) {
            var i, k, len, ref, results;
            if (tela.igo.luce.tone.cor == null) {
              tela.igo.luce.tone.cor = cor;
            }
            if (sessionStorage.getItem("tones") != null) {
              ref = sessionStorage.getItem("tones").split(" ");
              results = [];
              for (k = 0, len = ref.length; k < len; k++) {
                i = ref[k];
                results.push(tela.igo.luce.tone.create(i));
              }
              return results;
            }
          },
          flotar: function() {
            if ($(window).height() * 1.35 > $(window).width()) {
              return {
                "float": "left"
              };
            } else {
              return {
                "float": "none"
              };
            }
          },
          ser: function() {
            return $(".igo.mano .botone");
          }
        },
        create: function(gross) {
          return tela.igo.luce.parche(tela.igo.luce.tone.cor).addClass("botone igo").attr({
            gross: gross
          }).text(gross).on("click", function() {
            return window.location.hash = ["igo", gross].join("#");
          }).css({
            "font-size": "3.5vmin",
            "cursor": "pointer",
            "width": "10.9vmin",
            "padding": "2vmin",
            "font-size": "5vmin",
            "margin": "1.5vmin",
            marginTop: "3vmin",
            transition: "1s"
          }).css(tela.igo.luce.tone.mute.flotar()).contextmenu(function(e) {
            e.preventDefault();
            return window.location.hash = ["igo", gross, "forget"].join("#");
          });
        },
        troca: function(jeto) {
          return tela.igo.luce.tone[{
            "true": "salido",
            "false": "metido"
          }[jeto.hasClass("selected")]](jeto);
        },
        salido: function(jeto) {
          return jeto["removeClass"]("selected").css({
            "box-shadow": "0px 0px 1vmin 0px gray",
            backgroundColor: tela.igo.luce.color("E")
          });
        },
        metido: function(jeto) {
          return jeto["addClass"]("selected").css({
            "box-shadow": "0px 0px 1vmin 0px gray inset",
            backgroundColor: tela.igo.luce.color("D")
          });
        },
        selected: function(gross) {
          tela.igo.luce.tone.salido($(".igo.botone").off("transitionend"));
          return tela.igo.luce.tone.metido($(".igo.botone[gross=" + gross + "]"));
        },
        selecting: function(gross) {
          var botone;
          console.log("selecting");
          botone = $(".igo.botone");
          tela.igo.luce.tone.salido(botone.filter("[gross!=" + gross + "]").off("transitionend"));
          botone = botone.filter("[gross=" + gross + "]");
          return {
            "false": function(animo) {
              return $(".parche.igo.mano").append([animo(tela.igo.luce.tone.create(gross))]);
            },
            "true": function(animo) {
              return animo(botone);
            }
          }[botone.length !== 0](function(jeto) {
            return tela.igo.luce.tone.troca(jeto.on("transitionend", function() {
              return tela.igo.luce.tone.troca(jeto);
            }));
          });
        }
      },
      parche: function(v) {
        return tela.tag("table").addClass("parche igo").css({
          "background-color": tela.igo.luce.color(v),
          "font-family": "mono",
          "border": "none",
          "color": tela.igo.luce.color("1"),
          "border-radius": "0.5vmin",
          "padding": "0",
          "text-align": "center",
          "margin": "0",
          "display": "table",
          "box-shadow": "0px 0px 1vmin 0px gray",
          "overflow": "hidden"
        });
      },
      body: function(cor) {
        return $("body").css({
          "background-color": tela.igo.luce.color(cor)
        });
      },
      marco: function(cor) {
        if ($(".marco.igo").length) {
          return $(".marco.igo");
        } else {
          return tela.igo.luce.parche(cor).addClass("marco igo").css({
            "margin": "auto",
            "padding": "1vmin"
          });
        }
      },
      mano: function(cor) {
        if (!$("igo parche mano").length) {
          return tela.igo.luce.parche(cor).addClass("igo parche mano").css({
            "margin": "3vmin",
            "float": "right",
            "box-shadow": "0px 0px 1vmin 0px gray inset",
            "overflow": "hidden",
            "padding": "1.5vmin",
            paddingTop: "0"
          });
        }
      },
      resize: function() {
        return $(window).resize(function() {
          return tela.igo.luce.tone.mute.ser().css(tela.igo.luce.tone.mute.flotar());
        });
      }
    },
    init: function() {
      tela.igo.luce.body("A").prepend([tela.igo.luce.marco("C").append([tela.igo.luce.mano("B").append(tela.igo.luce.tone.mute.create("E"))])]);
      tela.igo.ws.on();
      return tela.igo.luce.resize();
    }
  };

  tela.igo.init();

}).call(this);
