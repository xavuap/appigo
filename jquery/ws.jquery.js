// Generated by CoffeeScript 1.12.0
(function() {
  tela.ws = {
    ori: {
      "http:": "ws://",
      "https:": "wss://"
    }[window.location.protocol] + window.location.host + (window.location.hostname.split(".")[1] === "rhcloud" ? ":8443" : ""),
    cn: function(ee) {
      console.log(tela.ws.ori);
      tela.ws.socket = new WebSocket(tela.ws.ori);
      tela.ws.socket.onclose = function(event) {
        console.log("close");
        return tela.ws.cn(ee);
      };
      tela.ws.socket.onerror = function(event) {
        return console.log("error");
      };
      return tela.ws.socket.onopen = function(evnt) {
        ee.open();
        return tela.ws.socket.onmessage = function(ev) {
          console.log(ev.data);
          return ee.message(JSON.parse(ev.data));
        };
      };
    },
    conectad: function() {
      return tela.ws.socket.readyState === WebSocket.OPEN;
    },
    ask: function(mj) {
      return tela.ws.socket.send(JSON.stringify(mj));
    },
    bf: [],
    on: {},
    rc: {}
  };


  /*
  	uso
  
  		tela.ws.on (json) ->
  			console.dir json
  
  		tela.ws.ask (json)
  		
  		tela.ws.on.igo = (mj)->
  			console.log mj
  		tela.igo.ws.ask = (m)->
  			tela.ws.ask(igo:m)
   */


  /*
  		tela.ws.socket.onopen = (event)->
  			tela.ws.on = (fc) ->
  				tela.ws.socket.onmessage = (e) ->
  					fc(JSON.parse(e.data))
   */


  /*
  			for cuore of tela.ws.rc
  				console.log "cn"
  				console.log cuore
  				tela.ws.rc[cuore]()
  			$(window).hashchange()
  			#tela.ws.cn[mod]
  			console.log "open"
  			until tela.ws.bf.length is 0
  				tela.ws.socket.send tela.ws.bf.shift()
   */


  /*
  				for md of mj
  					if tela.ws.on[md]?
  						tela.ws.on[md](mj[md])
  					else
  						console.log "por favor, no mod " +md
   */


  /*
  
  tela.ws = ()->
  	tela.ws.onopen = (ev) ->
  		tela.ws.socket.
   */

}).call(this);
